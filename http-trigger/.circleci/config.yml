version: 2.1

## Definitions
build_allways: &build_allways
  filters:
    tags:
      only: /.*/
defaults: &defaults
  environment:
    HTTP_CONTROLLER_IMAGE_NAME: kubeless/http-trigger-controller
    CGO_ENABLED: "0"
    TEST_DEBUG: "1"
    # Ingress addon stopped working after v1.11.0.
    # See https://github.com/kubernetes/minikube/issues/9322
    # This should be solved when https://github.com/kubernetes/minikube/commit/b27440d4aeabe0657f77a02f80acd8a300d4ac4d
    # is reverted, expected release v1.14.0.
    MINIKUBE_VERSION: v1.11.0
    KUBELESS_MANIFESTS: kubeless kubeless-non-rbac
exports: &exports
  # It is not possible to resolve env vars in the environment section:
  # https://discuss.circleci.com/t/using-environment-variables-in-config-yml-not-working/14237
  run: |
    CONTROLLER_TAG=${CIRCLE_TAG:-build-$CIRCLE_WORKFLOW_ID}
    echo "export CONTROLLER_TAG=${CONTROLLER_TAG}" >> $BASH_ENV
    echo "export HTTP_CONTROLLER_IMAGE=${HTTP_CONTROLLER_IMAGE_NAME}:${CONTROLLER_TAG}" >> $BASH_ENV
    echo "export KUBECFG_JPATH=/home/circleci/src/github.com/kubeless/http-trigger/ksonnet-lib" >> $BASH_ENV
    echo "export PATH=$(pwd)/bats/libexec:$PATH" >> $BASH_ENV
restore_workspace: &restore_workspace
  run: |
    make bootstrap
    sudo cp -r /tmp/go/bin/* /usr/local/bin/
    cp -r /tmp/go/build-manifests/*yaml .
should_test: &should_test
  run: |
    case $CIRCLE_JOB in
    # In kase of minikube+HTTP trigger controller we want to test it if
    # it is a Pull Request related to HTTP trigger (discovered from the PR title)
    # or if the build is from the "master" branch
    minikube_http)
      if [[ -n "$CIRCLE_PULL_REQUESTS" ]]; then
        pr_http_trigger__title=$(curl -H "Authorization: token $ACCESS_TOKEN" "https://api.github.com/repos/$TRAVIS_REPO_SLUG/pulls/${TRAVIS_PULL_REQUEST}" | grep title || true)
      fi
      if [[ -z "$CIRCLE_PULL_REQUESTS" || "$pr_http_trigger__title=" == "" || "$pr_http_trigger__title=" =~ ^.*(http|HTTP).*$ ]]; then
        export SHOULD_TEST=1
      fi
      ;;
    esac
    echo "Should test? $SHOULD_TEST"
    if [[ "$SHOULD_TEST" != "1" ]]; then
      circleci step halt
    fi
#### End of definitions


workflows:
  version: 2
  kubeless:
    jobs:
      - build:
          <<: *build_allways
      - minikube_core_triggers:
          <<: *build_allways
          requires:
            - build
          matrix:
            parameters:
              # Amazon EKS Kubernetes versions.
              # See https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html
              k8s-version:
                - v1.14.9
                - v1.15.11
                - v1.16.13
                - v1.17.9
                - v1.18.9
      - push_latest_images:
          filters:
            branches:
              only: master
          requires:
            - minikube_core_triggers
      - release:
          filters:
            tags:
              only: /v.*/
            branches:
              ignore: /.*/
          requires:
            - minikube_core_triggers
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - <<: *exports
      - run: go mod download
      - run: make bootstrap
      - run: make build-manifests
      - run: make VERSION=${CONTROLLER_TAG} binary
      - run: make test
      - run: make validation
      - persist_to_workspace:
          root: /go
          paths:
            - ./bin
      - persist_to_workspace:
          root: ./
          paths:
            - ./build-manifests/*yaml
      - store_artifacts:
          path: /go/bin/kubeless
          destination: ./bin/kubeless
      - store_artifacts:
          path: ./build-manifests/
  minikube_core_triggers:
    <<: *defaults
    machine:
      image: ubuntu-1604:202007-01
    parameters:
      k8s-version:
        type: string
    steps:
      - checkout
      - <<: *exports
      - run: |
          echo "export MINIKUBE_KUBERNETES_VERSION=<< parameters.k8s-version >>" >> $BASH_ENV
      - attach_workspace:
          at: /tmp/go
      - <<: *restore_workspace
      - run: sudo apt-get update && sudo apt-get install -y apache2-utils conntrack
      - run: ./script/pull-or-build-image.sh http-controller-image
      - run: ./script/integration-tests minikube deployment
      - run: ./script/integration-tests minikube http
  push_latest_images:
    <<: *defaults
    docker:
      - image: circleci/golang:1.15
    steps:
      - <<: *exports
      - setup_remote_docker
      - run: docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      - run: |
          images=(
            $HTTP_CONTROLLER_IMAGE_NAME
          )
          for image in "${images[@]}"; do
            echo "Pulling ${image}:${CONTROLLER_TAG}"
            docker pull ${image}:${CONTROLLER_TAG}
            docker tag ${image}:${CONTROLLER_TAG} ${image}:latest
            docker push ${image}:latest
          done
  release:
    <<: *defaults
    docker:
      - image: circleci/golang:1.15
    steps:
      - <<: *exports
      - checkout
      - attach_workspace:
          at: /tmp/go
      - <<: *restore_workspace
      - run: ./script/create_release.sh ${CIRCLE_TAG}
